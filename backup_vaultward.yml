---
- name: Bacup vaultwarden
  hosts: managed
  become: true
  vars:
    backup_directory: "backups"

  tasks:
    - name: Get current date
      set_fact:
        current_date: "{{ ansible_date_time.date }}"
    - name: Backup vaultwarden
      become: true
      file:
        path: "/tmp/{{ backup_directory }}/{{current_date}}"
        state: directory
    - name: Copy vaultwarden data
      become: true
      command:
        cmd: "tar -czvf vaultwarden_var_lib.tar.gz /var/lib/vaultwarden"
        chdir: "/tmp/{{ backup_directory }}/{{current_date}}"
    - name: Backup config files
      become: true
      copy:
        src: "{{ item }}"
        dest: "/tmp/{{ backup_directory }}/{{current_date}}/"
        remote_src: yes
      with_items:
        - /etc/vaultwarden.env
    - name: package to one tar file
      become: true
      command:
        cmd: "tar -czvf vaultwarden.tar.gz vaultwarden_var_lib.tar.gz vaultwarden.env"
        chdir: "/tmp/{{ backup_directory }}/{{current_date}}"

    - name: Upload backup file (vaultwarden.tar.gz) to R2
      become: false
      command:
        cmd: "mcli cp vaultwarden.tar.gz r2/backup/vaultwarden.tar.gz"
        chdir: "/tmp/{{ backup_directory }}/{{current_date}}"

    - name: remove vaultwarden_var_lib.tar.gz and vaultwarden.env
      become: true
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/{{ backup_directory }}/{{current_date}}/vaultwarden_var_lib.tar.gz
        - /tmp/{{ backup_directory }}/{{current_date}}/vaultwarden.env
        - /tmp/{{ backup_directory }}/{{current_date}}/vaultwarden.tar.gz

    # - name: Upload to minio use mcli
    #   become: false
    #   become_user: vaultwarden
    #   command:
    #     cmd: "mcli cp vaultwarden.tar.gz local/minio/vaultwarden.tar.gz"
    #     chdir: "/tmp/{{ backup_directory }}/{{current_date}}"
